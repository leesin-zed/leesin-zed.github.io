{"meta":{"title":"hojun","subtitle":null,"description":"好少年光芒万丈","author":"hojun","url":""},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"}],"posts":[{"title":"Contos命令安装Oracle11G","slug":"Contos命令安装Oracle11G","date":"2020-05-01T07:50:14.000Z","updated":"2020-05-01T09:44:52.387Z","comments":true,"path":"2020/05/01/Contos命令安装Oracle11G/","link":"","permalink":"/2020/05/01/Contos命令安装Oracle11G/","excerpt":"","text":"Contos6,Contos7版本一样的安装,只是部分命令不同,区别一下就好~ 首先去官网根据自己的系统位数下载以下两个版本软件压缩包,官网: http://www.oracle.com/technetwork/database/enterprise-edition/downloads/ linux.x64_11gR2_database_1of2.zip linux.x64_11gR2_database_2of2.zip 或者到我网盘下载 : https://pan.baidu.com/s/1a1iXeIj857gJPJSthQ0F8w 提取码: yb8o 1. 添加swap分区 dd if=/dev/zero of=/swap bs=1024 count=2048000 格式化交换文件: mkswap /swap 赋予权限: chmod 600 /swap 启动交换分区: swapon /swap 设置自动挂载: echo &quot;/swap swap swap default 0 0&quot;&gt;&gt;/etc/fstab 2.配置hostname​ 如果想要自己的主机名的话,该步也可跳过,但是后面需要修改配置文件,建议按步骤执行过去~ Contos 7 版本配置hostname hostnamectl set-hostname oracledb echo &quot;127.0.0.1 oracledb&quot; &gt;&gt;/etc/hosts Contos 6 版本配置hostname vim /etc/sysconfig/network 将 HOSTNAME=xxx 改成 HOSTNAME=oracledb vim /etc/hosts 将两行的 localhost.localdomain 改成oracledb 3.关闭selinux sed -i &quot;s/SELINUX=enforcing/SELINUX=disabled/&quot; /etc/selinux/config setenforce 0 4.安装依赖 yum -y install binutils compat-libcap1 compat-libstdc++-33 gcc gcc-c++ glibc glibc-devel ksh libaio libaio-devel libgcc libstdc++ libstdc++-devel libXi libXtst make sysstat unixODBC unixODBC-devel 如果上步安装依赖出现版本问题: Protected multilib versions: libgcc-4.4.7-23.el6.i686 != libgcc-4.4.7-18.el6.x86_64 那么执行完下面这句强制安装命令再次执行上步命令安装依赖即可: yum -y install libaio.so.1 libgcc_s.so.1 libstdc++.so.6 --setopt=protected_multilib=false libgcc #####检查依赖是否安装成功: rpm -q binutils compat-libcap1 compat-libstdc++-33 gcc gcc-c++ glibc glibc-devel ksh libaio libaio-devel libgcc libstdc++ libstdc++-devel libXi libXtst make sysstat unixODBC unixODBC-devel 5.创建系统组和用户 添加组 groupadd oinstall groupadd dba groupadd oper 添加用户和设置用户密码 useradd -g oinstall -G dba oracle passwd oracle 6.配置参数和资源 使用 vim /etc/sysctl.conf 命令编辑该配置文件,加入以下参数,如果对应已存在的数值大于下面参数的数值 就保留,否则修改 fs.aio-max-nr = 1048576 fs.file-max = 6815744 kernel.shmall = 2097152 kernel.shmmax = 536870912 kernel.shmmni = 4096 kernel.sem = 250 32000 100 128 net.ipv4.ip_local_port_range = 9000 65500 net.core.rmem_default = 262144 net.core.rmem_max = 4194304 net.core.wmem_default = 262144 net.core.wmem_max = 1048576 执行以下命令让参数生效 sysctl -p 使用 vim /etc/security/limits.conf 命令,在该配置文件中加入以下参数 oracle soft nproc 2047 oracle hard nproc 16384 oracle soft nofile 1024 oracle hard nofile 65536 使用 vim /etc/pam.d/login 命令,在该配置文件中加入以下参数 session required /lib64/security/pam_limits.so session required pam_limits.so 使用 vim /etc/profile 命令,在该配置文件中加入以下参数 if [ $USER = &quot;oracle&quot; ]; then if [ $SHELL = &quot;/bin/ksh&quot; ]; then ulimit -p 16384 ulimit -n 65536 else ulimit -u 16384 -n 65536 fi fi 执行以下命令让/etc/profile文件生效 source /etc/profile 禁用Transparent HugePages(启用Transparent HugePages,可能会导致造成内存在运行时的延迟分配，Oracle官方建议使用传统的HugePages) 执行以下命令查看是否启用Transparent HugePages,如显示[always]表示启动了,所以需要禁用 cat /sys/kernel/mm/transparent_hugepage/enabled 禁用方法: 使用 vim /etc/rc.d/rc.local 命令,在该文件中添加如下内容: if test -f /sys/kernel/mm/transparent_hugepage/enabled; then echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled fi if test -f /sys/kernel/mm/transparent_hugepage/defrag; then echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag fi 添加可执行权限 chmod +x /etc/rc.d/rc.local 7.创建Oracle安装目录 创建安装目录并赋予权限 mkdir -p /data/app/ chown -R oracle:oinstall /data/app/ chmod -R 775 /data/app/ 8.配置用户环境变量 使用 vim /home/oracle/.bash_profile 命令,在该配置文件加入以下配置 umask 022 export ORACLE_HOSTNAME=oracledb export ORACLE_BASE=/data/app/oracle export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/ export ORACLE_SID=ORCL export PATH=.:$ORACLE_HOME/bin:$ORACLE_HOME/OPatch:$ORACLE_HOME/jdk/bin:$PATH export LC_ALL=&quot;en_US&quot; export LANG=&quot;en_US&quot; export NLS_LANG=&quot;AMERICAN_AMERICA.ZHS16GBK&quot; export NLS_DATE_FORMAT=&quot;YYYY-MM-DD HH24:MI:SS&quot; 重启系统 (重启完毕后也可查看之前的 Transparent HugePages 是否禁用 [never] 表示禁用) reboot 9.解压下载的两个Oracle压缩包文件 进入存放压缩包的目录,执行以下命令将资源解压到指定目录 unzip -q linux.x64_11gR2_database_1of2.zip -d /data unzip -q linux.x64_11gR2_database_2of2.zip -d /data 创建目录并将文件复制到该目录 mkdir -p /data/etc cp /data/database/response/* /data/etc/ 使用 vim /data/etc/db_install.rsp 命令,对应以下属性值 oracle.install.option=INSTALL_DB_SWONLY ORACLE_HOSTNAME=oracledb #如果配置hostname步骤跳过了的话,该参数值请填写自己的hostname UNIX_GROUP_NAME=oinstall INVENTORY_LOCATION=/data/app/oracle/inventory SELECTED_LANGUAGES=en,zh_CN ORACLE_HOME=/data/app/oracle/product/11.2.0 ORACLE_BASE=/data/app/oracle oracle.install.db.InstallEdition=EE oracle.install.db.isCustomInstall=true oracle.install.db.DBA_GROUP=dba oracle.install.db.OPER_GROUP=dba DECLINE_SECURITY_UPDATES=true 10.安装Oracle 执行以下命令开始安装,如果安装时间长的请耐心等待一会 su - oracle cd /data/database ./runInstaller -silent -responseFile /data/etc/db_install.rsp -ignorePrereq 出现如下,说明安装完成 切换 root 用户 su - root 执行以下脚本 sh /data/app/oracle/inventory/orainstRoot.sh sh /data/app/oracle/product/11.2.0/root.sh 11.配置监听 如配置hostname步骤跳过了的,请修改 listener.ora 和 tnsnames.ora 的host为自己的host,配置了的请忽略 cd /data/app/oracle/product/11.2.0/network/admin/ vim listener.ora vim tnsnames.ora 执行以下命令配置监听 su - oracle netca /silent /responsefile /data/etc/netca.rsp 输出如下 查看监听端口 netstat -tnpl | grep 1521 12.静默创建数据库 切换root用户 su - root 使用 vim /data/etc/dbca.rsp 命令编辑该文件使之对应如下 [GENERAL] RESPONSEFILE_VERSION = &quot;11.2.0&quot; OPERATION_TYPE = &quot;createDatabase&quot; [CREATEDATABASE] GDBNAME = &quot;orcl&quot; SID = &quot;orcl&quot; SYSPASSWORD = &quot;oracle&quot; SYSTEMPASSWORD = &quot;oracle&quot; SYSMANPASSWORD = &quot;oracle&quot; DBSNMPPASSWORD = &quot;oracle&quot; DATAFILEDESTINATION =/data/app/oracle/oradata RECOVERYAREADESTINATION=/data/app/oracle/fast_recovery_area CHARACTERSET = &quot;AL32UTF8&quot; TOTALMEMORY = &quot;1638&quot; 执行以下命令静默建库 su - oracle dbca -silent -responseFile /data/etc/dbca.rsp 执行过程如下 查看进程 ps -ef | grep ora_ | grep -v grep 查看监听状态 lsnrctl status 到这Oracle已经安装完毕 13.登录数据库(sqlplus不能上下左右退格请看14步骤解决) 进入sqlplus sqlplus / as sysdba select status from v$instance; 出现上图情况的解决方式 startup 输入 startup 出现上图情况,解决方式 将 /data/app/oracle/admin/orcl/pfile/ 该目录下的init.ora.xxxxxx文件copy到对应上图的file后面那截路径名为initORCL.ora的文件,如下图: 上步执行完后继续 sqlplus / as sysdba 然后 startup 如出现上图,解决如下: su - root sudo mount -o remount,size=20G /dev/shm 再次startup时就启动成功了,结果如下: 查看数据库编码,不显示UTF-8的重启一下系统 select userenv(&#39;language&#39;) from dual; 输出如下: 查看数据库版本 select * from v$version; 输出如下: 激活scott用户 alter user scott account unlock; alter user scott identified by xxx; -- 设置scott用户密码,xxx位置是你要设置的密码的部分 select username,account_status from dba_users; 14.安装rlwrap组件解决sqlplus不能上下左右退格操作​ 下载的时候连接失败的可以尽量多试几次,实在不行网盘里也有这两个压缩包,将两个压缩包用ftp工具传输到root ​ 目录下再执行安装等操作也行的~ 下载之前,首先配置hosts,使用 vim /etc/hosts 命令进入文件添加如下 199.232.68.133 raw.githubusercontent.com 下载安装readline组件 wget https://raw.githubusercontent.com/leesin-zed/test/master/readline-6.2.tar.gz tar xvf readline-6.2.tar.gz cd readline-6.2 ./configure &amp;&amp; make &amp;&amp; make install 下载rlwrap组件 wget https://raw.githubusercontent.com/leesin-zed/test/master/rlwrap-0.43.tar.gz 解压、编译、安装 tar zxf rlwrap-0.43.tar.gz cd rlwrap-0.43 yum install readline* ./configure --prefix=/home/oracle/3rd/rlwrap-0.43 make make install 切换成oracle用户 使用 vim ~/.bash_profile 命令在最后配置以下两条环境变量, export PATH=$HOME/3rd/rlwrap-0.43/bin:$PATH alias sqlplus=&quot;rlwrap sqlplus&quot; 刷新环境变量使之生效 source ~/.bash_profile 15.开放端口 Contos 7 版本开放端口 firewall-cmd --zone=public --add-port=1521/tcp --permanent firewall-cmd --reload Contos 6 版本开放端口 /sbin/iptables -I INPUT -p tcp --dport 1521 -j ACCEPT /etc/init.d/iptables save service iptables restart 16.远程连接 我这里用的是Navicat Premium 15,安装包和注册机在上面的网盘里 安装就不说了,直接注册机: 安装完成先不要打开软件 打开解压完成的注册机,如果报毒就把杀毒软件先关闭一下 打开软件显示以下 点击Patch按钮找到软件安装目录的navicat.exe文件打开 打开后出现如下提示: 然后点击右侧的Generate按钮左侧框中会生成一个密钥,我们复制这段密钥,然后打开软件,弹出的框我们选择注册,将复制的密钥粘贴进去然后点击激活~ 点击激活后会提示如下,我们选择手动激活 点击手动激活后会有一个请求码 复制请求码到注册机中的Request Code框框里面，之后点击Activation Code下面的Generate按钮就会生成一个激活码 再将注册机生成的激活码复制到Navicat Premium 15的激活码框框里,点击激活就搞定了~ ​ 打开软件测试远程连接 17.Oracle开机自动启动 设置开机自动启动就无需手动开启监听、实例这些操作了 切换root用户 su - root 使用 vim /data/app/oracle/product/11.2.0/bin/dbstart 命令,将参数值为1的,修改为以下参数值 ORACLE_HOME_LISTNER=$ORACLE_HOME 使用 vim /data/app/oracle/product/11.2.0/bin/dbshut 命令,同上 ORACLE_HOME_LISTNER=$ORACLE_HOME 使用 vim /etc/oratab 命令,将N改成Y orcl:/data/app/oracle/product/11.2.0:Y 使用 vim /etc/rc.d/init.d/oracle 命令,复制以下,创建文件 注意: 粘贴时顶部两行会缺失,请将缺失的部分再复制粘贴上去(第一行没有,第二行开头缺失) #! /bin/bash # oracle: Start/Stop Oracle Database 11g R2 # # chkconfig: 345 90 10 # description: The Oracle Database is an Object-Relational Database Management System. # # processname: oracle . /etc/rc.d/init.d/functions LOCKFILE=/var/lock/subsys/oracle ORACLE_HOME=/data/app/oracle/product/11.2.0 ORACLE_USER=oracle case &quot;$1&quot; in &#39;start&#39;) if [ -f $LOCKFILE ]; then echo $0 already running. exit 1 fi echo -n $&quot;Starting Oracle Database:&quot; su - $ORACLE_USER -c &quot;$ORACLE_HOME/bin/lsnrctl start&quot; su - $ORACLE_USER -c &quot;$ORACLE_HOME/bin/dbstart $ORACLE_HOME&quot; su - $ORACLE_USER -c &quot;$ORACLE_HOME/bin/emctl start dbconsole&quot; touch $LOCKFILE ;; &#39;stop&#39;) if [ ! -f $LOCKFILE ]; then echo $0 already stopping. exit 1 fi echo -n $&quot;Stopping Oracle Database:&quot; su - $ORACLE_USER -c &quot;$ORACLE_HOME/bin/lsnrctl stop&quot; su - $ORACLE_USER -c &quot;$ORACLE_HOME/bin/dbshut&quot; su - $ORACLE_USER -c &quot;$ORACLE_HOME/bin/emctl stop dbconsole&quot; rm -f $LOCKFILE ;; &#39;restart&#39;) $0 stop $0 start ;; &#39;status&#39;) if [ -f $LOCKFILE ]; then echo $0 started. else echo $0 stopped. fi ;; *) echo &quot;Usage: $0 [start|stop|status]&quot; exit 1 esac exit 0 赋予权限 chmod +x /etc/init.d/oracle 开机启动Oracle chkconfig oracle on 赋予启动文件权限 cd /data/app/oracle/product/11.2.0/bin/ chmod 6751 oracle cd /var/tmp chown -R oracle:oinstall .oracle 参考:https://blog.csdn.net/chenghuikai/article/details/85776622","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]}]}